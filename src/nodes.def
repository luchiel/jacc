NODE(REFERENCE, "&", NC_UNARY, 1)
NODE(DEREFERENCE, "*", NC_UNARY, 1)
NODE(IDENTITY, "+", NC_UNARY, 1)
NODE(NEGATION, "-", NC_UNARY, 1)
NODE(COMPLEMENT, "~", NC_UNARY, 1)
NODE(LOGICAL_NEGATION, "!", NC_UNARY, 1)

NODE(PREFIX_INC, "++@", NC_UNARY, 1)
NODE(PREFIX_DEC, "--@", NC_UNARY, 1)
NODE(POSTFIX_INC, "@++", NC_UNARY, 1)
NODE(POSTFIX_DEC, "@--", NC_UNARY, 1)

NODE(COMMA, ",", NC_BINARY, 2)

NODE(OR, "||", NC_BINARY, 2)
NODE(AND, "&&", NC_BINARY, 2)

NODE(BIT_OR, "|", NC_BINARY, 2)
NODE(BIT_XOR, "^", NC_BINARY, 2)
NODE(BIT_AND, "&", NC_BINARY, 2)

NODE(EQ, "==", NC_BINARY, 2)
NODE(NE, "!=", NC_BINARY, 2)

NODE(LT, "<", NC_BINARY, 2)
NODE(LE, "<=", NC_BINARY, 2)
NODE(GT, ">", NC_BINARY, 2)
NODE(GE, ">=", NC_BINARY, 2)

NODE(LSHIFT, "<<", NC_BINARY, 2)
NODE(RSHIFT, ">>", NC_BINARY, 2)

NODE(ADD, "+", NC_BINARY, 2)
NODE(SUB, "-", NC_BINARY, 2)

NODE(MUL, "*", NC_BINARY, 2)
NODE(DIV, "/", NC_BINARY, 2)
NODE(MOD, "%", NC_BINARY, 2)

NODE(ASSIGN, "=", NC_BINARY, 2)
NODE(ADD_ASSIGN, "+=", NC_BINARY, 2)
NODE(SUB_ASSIGN, "-=", NC_BINARY, 2)
NODE(MUL_ASSIGN, "*=", NC_BINARY, 2)
NODE(DIV_ASSIGN, "/=", NC_BINARY, 2)
NODE(MOD_ASSIGN, "%=", NC_BINARY, 2)
NODE(LSHIFT_ASSIGN, "<<=", NC_BINARY, 2)
NODE(RSHIFT_ASSIGN, ">>=", NC_BINARY, 2)
NODE(OR_ASSIGN, "|=", NC_BINARY, 2)
NODE(AND_ASSIGN, "&=", NC_BINARY, 2)
NODE(XOR_ASSIGN, "^=", NC_BINARY, 2)

NODE(SUBSCRIPT, "[]", NC_BINARY, 2)
NODE(MEMBER, ".", NC_BINARY, 2)
NODE(MEMBER_BY_PTR, "->", NC_BINARY, 2)
NODE(CALL, "call", NC_BINARY, 2)
NODE(CAST, "cast", NC_BINARY, 1)

NODE(TERNARY, "?:", NC_TERNARY, 3)

NODE(VARIABLE, "var", NC_ATOM, 0)
NODE(INT, "int", NC_ATOM, 0)
NODE(DOUBLE, "double", NC_ATOM, 0)
NODE(STRING, "string", NC_ATOM, 0)
NODE(IDENT, "ident", NC_ATOM, 0)
NODE(NOP, "nop", NC_ATOM, 0)

NODE(RETURN, "return", NC_STATEMENT, 1)
NODE(IF, "if", NC_STATEMENT, 3)
NODE(WHILE, "while", NC_STATEMENT, 2)
NODE(DO_WHILE, "do while", NC_STATEMENT, 2)
NODE(FOR, "for", NC_STATEMENT, 4)
NODE(BREAK, "break", NC_STATEMENT, 0)
NODE(CONTINUE, "continue", NC_STATEMENT, 0)
NODE(GOTO, "goto", NC_STATEMENT, 1)
NODE(LABEL, "label", NC_STATEMENT, 2)
NODE(SWITCH, "switch", NC_STATEMENT, 2)
NODE(CASE, "case", NC_STATEMENT, 2)
NODE(DEFAULT, "default", NC_STATEMENT, 1)

NODE(LIST, "list", NC_STATEMENT, 0)

NODE(UNKNOWN, "???", NC_UNKNOWN, 0)